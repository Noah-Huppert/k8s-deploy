#/usr/bin/env bash
#
# USAGE
#	k8s-deploy --docker-repo DOCKER_REPO --deploy-dir DEPLOY_DIR
#
# OPTIONS
#	--docker-repo DOCKER_REPO    Name of docker repository to push docker
#                                image to
#
#	--deploy-dir DEPLOY_DIR      Directory which holds Helm packages. Each
#                                directory in the DEPLOY_DIR must be a
#                                Helm package.
#
#	--rm-deploy                  Remove deployment from cluster

# Arguments
while [ ! -z "$1" ]; do
	if [[ "$1" == "--docker-repo" ]]; then
		shift
		docker_repo="$1"
		shift

		if [ -z "$docker_repo" ]; then
			echo "Error: DOCKER_REPO argument must be provided" >&2
			exit 1
		fi
	elif [[ "$1" == "--deploy-dir" ]]; then
		shift
		deploy_dir="$1"
		shift

		if [ -z "$deploy_dir" ]; then
			echo "Error: DEPLOY_DIR argument must be provided" >&2
			exit 1
		fi
	elif [[ "$1" == "--rm-deploy" ]]; then
		shift
		rm_deploy="true"
	else
		echo "Error: unknown option \"$1\"" >&2
		exit 1
	fi
done

# Perform docker deploy actions if --docker-repo option provided
if [ ! -z "$docker_repo" ]; then
	# Build docker image
	echo "Building docker image"

	if ! git rev-parse --verify HEAD | read version; then
		echo "Error: failed to get git head sha" >&2
		exit 1
	fi

	docker_tag="$docker_repo:$version"

	if ! docker build -t "$docker_tag" .; then
		echo "Error: failed to build docker image" >&2
		exit 1
	fi

	# Push docker image
	echo "Pushing docker image"
	if ! docker push "$docker_tag"; then
		echo "Error: failed to push docker image" >&2
		exit 1
	fi
fi

# Perform helm deploy actions if --deploy-dir option provided
if [ ! -z "$deploy_dir" ]; then
	echo "Deploying Helm charts"

	# Helm packages
	for pkg in $(find helm-charts -mindepth 1 -maxdepth 1 -type d); do
		pkg_dir="$(pwd)/$pkg"

		echo "Helm chart: $pkg_dir"

		# Get deployment name
		deployment_name="$pkg"
		if [ -f "$pkg_dir/DEPLOYMENT_NAME" ]; then
			deployment_name=$(cat "$pkg_dir/DEPLOYMENT_NAME")
		fi

		# Get namespace name
		namespace_name="$deployment_name"
		if [ -f "$pkg_dir/NAMESPACE_NAME" ]; then
			namespace_name=$(cat "$pkg_dir/NAMESPACE_NAME")
		fi


		if [[ "$rm_deploy" == "true" ]]; then
			echo "Removing"
			helm delete --purge "$deployment_name"
		else
			# Package
			echo "Building helm chart"
			if ! helm package "$pkg_dir"; then
				echo "Error: failed to build helm package" >&2
				exit 1
			fi
		
			# Deploy
			echo "Deploying helm chart"
			if ! helm upgrade --install --namespace "$namespace_name" "$deployment_name" "$pkg_dir"; then
				echo "Error: failed to deploy helm package" >&2
				exit 1
			fi
		fi
	done
fi
