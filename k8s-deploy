#/usr/bin/env bash
# vim: filetype=sh
#
# USAGE
#	k8s-deploy [--docker-repo DOCKER_REPO] [--deploy-dir DEPLOY_DIR] [--rm-deploy]
#
# OPTIONS
#	--docker-repo DOCKER_REPO    Name of docker repository to push docker
#                                image to
#
#	--deploy-dir DEPLOY_DIR      Directory which holds Helm packages. Each
#                                directory in the DEPLOY_DIR must be a
#                                Helm package.
#
#	--rm-deploy                  Remove deployment from cluster

# Arguments
while [ ! -z "$1" ]; do
	if [[ "$1" == "--docker-repo" ]]; then
		shift
		docker_repo="$1"
		shift

		if [ -z "$docker_repo" ]; then
			echo "Error: DOCKER_REPO argument must be provided" >&2
			exit 1
		fi
	elif [[ "$1" == "--deploy-dir" ]]; then
		shift
		deploy_dir="$1"
		shift

		if [ -z "$deploy_dir" ]; then
			echo "Error: DEPLOY_DIR argument must be provided" >&2
			exit 1
		fi
	elif [[ "$1" == "--rm-deploy" ]]; then
		shift
		rm_deploy="true"
	else
		echo "Error: unknown option \"$1\"" >&2
		exit 1
	fi
done

echo "Configuration"
echo "    Docker repo: $docker_repo"
echo "    Deploy dir : $deploy_dir"
echo "    RM deploy  : $rm_deploy"

# Perform docker deploy actions if --docker-repo option provided
if [ ! -z "$docker_repo" ]; then
	echo "##########################"
	echo "# Deploying Docker image #"
	echo "##########################"

	# Build docker image tag
	version=$(git rev-parse --verify HEAD)
	if [[ "$!" != "0" ]]; then
		echo "Error: failed to get git head sha" >&2
		exit 1
	fi

	docker_tag="$docker_repo:$version"

	echo "Docker tag: $docker_tag"

	# Build docker image
	echo "===== Building Docker image"

	if ! docker build -t "$docker_tag" .; then
		echo "Error: failed to build docker image" >&2
		exit 1
	fi

	# Push docker image
	echo "===== Pushing Docker image"
	if ! docker push "$docker_tag"; then
		echo "Error: failed to push docker image" >&2
		exit 1
	fi
fi

# Perform helm deploy actions if --deploy-dir option provided
if [ ! -z "$deploy_dir" ]; then
	echo "#########################"
	echo "# Deploying Helm charts #"
	echo "#########################"

	# Helm packages
	for pkg in $(find "$deploy_dir" -mindepth 1 -maxdepth 1 -type d); do
		pkg_dir="$(pwd)/$pkg"

		# Get deployment name
		deployment_name="$pkg"
		if [ -f "$pkg_dir/DEPLOYMENT_NAME" ]; then
			deployment_name=$(cat "$pkg_dir/DEPLOYMENT_NAME")
		fi

		# Get namespace name
		namespace_name="$deployment_name"
		if [ -f "$pkg_dir/NAMESPACE_NAME" ]; then
			namespace_name=$(cat "$pkg_dir/NAMESPACE_NAME")
		fi

		echo "     Helm chart     : $pkg"
		echo "     Helm chart path: $pkg_dir"
		echo "     Deployment name: $deployment_name"
		echo "     Namespace name : $namespace_name"


		if [[ "$rm_deploy" == "true" ]]; then
			# Undeploy
			echo "===== Removing Helm chart deployment"
			if ! helm delete --purge "$deployment_name"; then
				echo "Error: failed to removing Helm chart deployment" >&2
				exit 1
			fi
		else
			# Package
			echo "===== Building Helm chart"
			if ! helm package "$pkg_dir"; then
				echo "Error: failed to build helm package" >&2
				exit 1
			fi
		
			# Deploy
			echo "===== Deploying Helm chart"
			if ! helm upgrade --install --namespace "$namespace_name" "$deployment_name" "$pkg_dir"; then
				echo "Error: failed to deploy helm package" >&2
				exit 1
			fi
		fi
	done
fi
